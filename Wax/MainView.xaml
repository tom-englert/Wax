<UserControl x:Class="tomenglertde.Wax.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" d:DesignHeight="900" d:DesignWidth="1200"
             xmlns:dgx="clr-namespace:DataGridExtensions;assembly=DataGridExtensions"
             xmlns:wax="urn:wax"
             xmlns:toms="urn:TomsToolbox"
             xmlns:local="clr-namespace:tomenglertde.Wax"
             xmlns:properties="clr-namespace:tomenglertde.Wax.Properties"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:styles="urn:TomsToolbox.Wpf.Styles"
             Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
             Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
             d:DataContext="{d:DesignInstance local:MainViewModel}">
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <Style TargetType="Button" x:Key="SquareButtonStyle" BasedOn="{StaticResource {x:Static styles:ResourceKeys.ButtonStyle}}">
      <Setter Property="Width" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" />
      <Setter Property="TextElement.FontWeight" Value="Bold" />
      <Setter Property="MinWidth" Value="0" />
      <Setter Property="Padding" Value="0" />
      <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style TargetType="DataGrid" x:Key="DefaultDataGridStyle" BasedOn="{StaticResource {x:Static styles:ResourceKeys.DataGridStyle}}">
      <Setter Property="RowHeight" Value="22" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="CanUserAddRows" Value="False" />
      <Setter Property="CanUserDeleteRows" Value="False" />
      <Setter Property="CanUserReorderColumns" Value="False" />
      <Setter Property="CanUserResizeRows" Value="False" />
      <Setter Property="AutoGenerateColumns" Value="False" />
    </Style>
    <Style TargetType="DataGrid" x:Key="DirectoryDataGridStyle" BasedOn="{StaticResource DefaultDataGridStyle}">
      <Setter Property="SelectionMode" Value="Single" />
      <Setter Property="RowStyle">
        <Setter.Value>
          <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Static styles:ResourceKeys.DataGridRowStyle}}">
            <Style.Triggers>
              <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
              <DataTrigger Binding="{Binding MappedNode}" Value="{x:Null}">
                <Setter Property="Background" Value="LightCoral" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <DataTrigger Binding="{Binding InstallDirectoryMapping.MappedNode, FallbackValue={x:Null}}" Value="{x:Null}">
          <Setter Property="IsEnabled" Value="False" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    <Style TargetType="ToolBarTray">
      <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" />
    </Style>
    <Style TargetType="ToolBar">
      <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" />
      <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
      <Setter Property="Template">
        <!-- A simplified tool bar without overflow and thumb -->
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToolBar}">
            <Grid Margin="3,1,1,1" SnapsToDevicePixels="true">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                      Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                <Grid KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                  <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <styles:InvertGrayEffect x:Key="InvertGrayEffect" />
    <Style TargetType="Image">
      <Setter Property="Stretch" Value="None" />
      <Style.Triggers>
        <DataTrigger Binding="{Binding IsDarkTheme, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" Value="True">
          <Setter Property="Effect" Value="{StaticResource InvertGrayEffect}" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </UserControl.Resources>
  <DockPanel Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
    <ToolBarTray DockPanel.Dock="Top" Margin="0" Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}">
      <ToolBar Background="Transparent">
        <Button ToolTip="{x:Static properties:Resources.Refresh}" Click="Refresh_Click">
          <Image SnapsToDevicePixels="True" Source="/Wax;component/Resources/refresh.png" />
        </Button>
        <Separator />
        <ToggleButton Content="{x:Static properties:Resources.DeploySymbols}" IsChecked="{Binding DeploySymbols}" ToolTip="{x:Static properties:Resources.DeploySymbolsToolTip}" />
        <ToggleButton Content="{x:Static properties:Resources.Localizations}" IsChecked="{Binding DeployLocalizations}" ToolTip="{x:Static properties:Resources.LocalizationsToolTip}" />
        <ToggleButton Content="{x:Static properties:Resources.ExternalLocalizations}" IsChecked="{Binding DeployExternalLocalizations}" ToolTip="{x:Static properties:Resources.ExternalLocalizationsToolTip}" />
        <Separator />
        <Button ToolTip="{x:Static properties:Resources.SupportTheProjectByWritingAShortReview}"
                Tag="https://marketplace.visualstudio.com/vsgallery/ab48d869-8f75-4e02-8e7d-577346065aa6#review-details">
          <Image SnapsToDevicePixels="True" Source="/Wax;component/Resources/like.png" />
        </Button>
        <Button ToolTip="{x:Static properties:Resources.Documentation}"
                Tag="https://github.com/tom-englert/Wax">
          <Grid Width="16" Height="16">
            <TextBlock Text="?" FontWeight="Bold" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" />
          </Grid>
        </Button>
      </ToolBar>
    </ToolBarTray>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="4*" />
      </Grid.ColumnDefinitions>
      <DockPanel Grid.Column="0">
        <Grid DockPanel.Dock="Top">
          <local:GroupBox Ordinal="1" Header="{x:Static properties:Resources.SetupProjectToEdit}">
            <ListBox x:Name="SetupProjectListBox"
                     Style="{StaticResource {x:Static styles:ResourceKeys.ListBoxStyle}}"
                     ItemsSource="{Binding Solution.WixProjects}"
                     SelectedItem="{Binding SelectedWixProject}"
                     MinHeight="30" MaxHeight="100"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     Loaded="SetupProjectListBox_Loaded">
              <ListBox.ItemTemplate>
                <DataTemplate DataType="wax:WixProject">
                  <TextBlock>
                    <Run Text="{Binding Name, Mode=OneWay}" FontWeight="Bold" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                    (<Run Text="{Binding RelativeFolder, Mode=OneWay}" />)
                  </TextBlock>
                </DataTemplate>
              </ListBox.ItemTemplate>
            </ListBox>
            <local:GroupBox.Style>
              <Style TargetType="local:GroupBox">
                <Setter Property="IsOk" Value="True" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding SelectedItem, ElementName=SetupProjectListBox}" Value="{x:Null}">
                    <Setter Property="IsOk" Value="False" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </local:GroupBox.Style>
          </local:GroupBox>
        </Grid>
        <Decorator Height="10" DockPanel.Dock="Top" />
        <Grid DockPanel.Dock="Top">
          <local:GroupBox Ordinal="2" Header="{x:Static properties:Resources.RootDirectory}"
                          DataContext="{Binding InstallDirectoryMapping}"
                          VerticalAlignment="Top">
            <Grid Margin="1">
              <TextBlock VerticalAlignment="Center" Margin="3">
                <Run Text="{Binding MappedNode.Id, Mode=OneWay}" Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" FontWeight="Bold" />
                (<Run Text="{Binding MappedNode.Path, Mode=OneWay}" />)
              </TextBlock>
              <ComboBox ItemsSource="{Binding UnmappedNodes}"
                        SelectedItem="{Binding MappedNodeSetter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.Style>
                  <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Static styles:ResourceKeys.ComboBoxStyle}}">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding MappedNode}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Visible" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </ComboBox.Style>
              </ComboBox>
            </Grid>
            <local:GroupBox.Style>
              <Style TargetType="local:GroupBox">
                <Setter Property="IsOk" Value="True" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding MappedNode}" Value="{x:Null}">
                    <Setter Property="IsOk" Value="False" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </local:GroupBox.Style>
          </local:GroupBox>
        </Grid>
        <Decorator Height="10" DockPanel.Dock="Top" />
        <Grid DockPanel.Dock="Bottom" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
          <Button Margin="3" HorizontalAlignment="Left"
                  Background="Transparent" BorderBrush="Transparent"
                  BorderThickness="0" ToolTip="{x:Static properties:Resources.SupportTheProject}"
                  Tag="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=799WX673GPQM8">
            <Button.Style>
              <Style TargetType="Button">
                <Setter Property="Opacity" Value="0.15" />
                <Style.Triggers>
                  <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard Name="DonateMouseEnter">
                      <Storyboard Duration="0:0:0.5" Storyboard.TargetProperty="Opacity">
                        <DoubleAnimation To="1.0" />
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger>
                  <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard Name="DonateMouseLeave">
                      <Storyboard Duration="0:0:0.5" Storyboard.TargetProperty="Opacity">
                        <DoubleAnimation To="0.15" />
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger>
                </Style.Triggers>
              </Style>
            </Button.Style>
            <Image SnapsToDevicePixels="True" Stretch="None" Source="/Wax;component/Resources/btn_donate_SM.gif" />
          </Button>
        </Grid>
        <Grid>
          <local:GroupBox Ordinal="3" Header="{x:Static properties:Resources.ProjectsToInstall}">
            <DockPanel>
              <CheckBox x:Name="ShowAllProjects" DockPanel.Dock="Top" 
                        Content="{x:Static properties:Resources.ShowAllProjects}" 
                        Margin="0,5"
                        IsEnabled="{Binding CanHideReferencedProjects}">
                <CheckBox.Style>
                  <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Static styles:ResourceKeys.CheckBoxStyle}}">
                    <Style.Triggers>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="IsChecked" Value="true" />
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                </CheckBox.Style>
              </CheckBox>
              <ListBox x:Name="ProjectsListBox" SelectionMode="Multiple"
                       toms:MultiSelectorExtensions.SelectionBinding="{Binding SelectedVsProjects}"
                       ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemTemplate>
                  <DataTemplate DataType="wax:Project">
                    <CheckBox x:Name="CheckBox" Style="{StaticResource {x:Static styles:ResourceKeys.CheckBoxStyle}}"
                              IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}">
                      <TextBlock x:Name="TextBlock">
                        <Run Text="{Binding Name, Mode=OneWay}" FontWeight="Bold" />
                        (<Run Text="{Binding RelativeFolder, Mode=OneWay}" />)
                      </TextBlock>
                    </CheckBox>
                    <DataTemplate.Triggers>
                      <DataTrigger Binding="{Binding IsImplicitSelected}" Value="True">
                        <Setter TargetName="TextBlock" Property="Opacity" Value=".5" />
                        <Setter TargetName="CheckBox" Property="IsThreeState" Value="True" />
                        <Setter TargetName="CheckBox" Property="IsChecked" Value="{x:Null}" />
                        <Setter TargetName="CheckBox" Property="IsEnabled" Value="False" />
                        <Setter Property="ToolTip">
                          <Setter.Value>
                            <ToolTip Style="{StaticResource {x:Static styles:ResourceKeys.ToolTipStyle}}">
                              <TextBlock>
                                <Run Text="{x:Static properties:Resources.ReferencedBy}" />
                                <Run Text="{Binding ImplicitSelectedBy, Mode=OneWay}" />
                              </TextBlock>
                            </ToolTip>
                          </Setter.Value>
                        </Setter>
                      </DataTrigger>
                    </DataTemplate.Triggers>
                  </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.Style>
                  <Style TargetType="ListBox" BasedOn="{StaticResource {x:Static styles:ResourceKeys.ListBoxStyle}}">
                    <Setter Property="ItemsSource" Value="{Binding Solution.EnumerateTopLevelProjects}" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsChecked, ElementName=ShowAllProjects}" Value="True">
                        <Setter Property="ItemsSource" Value="{Binding Solution.Projects}" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding SelectedWixProject}" Value="{x:Null}">
                        <Setter Property="IsEnabled" Value="False" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </ListBox.Style>
              </ListBox>
            </DockPanel>
            <local:GroupBox.Style>
              <Style TargetType="local:GroupBox">
                <Setter Property="IsOk" Value="True" />
                <Style.Triggers>
                  <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=ProjectsListBox}" Value="0">
                    <Setter Property="IsOk" Value="False" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </local:GroupBox.Style>
          </local:GroupBox>
        </Grid>
      </DockPanel>
      <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="5" />
      <Grid Grid.Column="2">
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="3*" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <local:GroupBox Grid.Row="0" Ordinal="4" Header="{x:Static properties:Resources.DirectoryMappings}" IsOk="{Binding AreAllDirectoriesMapped}">
          <DataGrid x:Name="DirectoryDataGrid" ItemsSource="{Binding DirectoryMappings}"
                    Style="{StaticResource DirectoryDataGridStyle}">
            <DataGrid.Columns>
              <DataGridTextColumn Header="{x:Static properties:Resources.Directory}" Binding="{Binding Directory, StringFormat='.\\{0}'}" Width="200" IsReadOnly="True" />
              <DataGridTemplateColumn Header="{x:Static properties:Resources.WiXDefinition}" Width="*" IsReadOnly="True">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate DataType="wax:DirectoryMapping">
                    <Border VerticalAlignment="Center">
                      <Grid>
                        <TextBlock x:Name="resolvedDirectory" DataContext="{Binding MappedNode}">
                          <Run Text="{Binding Id, Mode=OneWay}" />
                          <Span Foreground="Gray">(<Run Text="{Binding Path=Path, Mode=OneWay}" />)</Span>
                        </TextBlock>
                        <ComboBox x:Name="unmappedDirectory" ItemsSource="{Binding UnmappedNodes}"
                                  Style="{StaticResource {x:Static styles:ResourceKeys.ComboBoxStyle}}"
                                  SelectedItem="{Binding MappedNodeSetter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Visibility="Collapsed" />
                      </Grid>
                    </Border>
                    <DataTemplate.Triggers>
                      <DataTrigger Binding="{Binding MappedNode}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Hidden" TargetName="resolvedDirectory" />
                        <Setter Property="Visibility" Value="Visible" TargetName="unmappedDirectory" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding UnmappedNodes.Count}" Value="0">
                        <Setter Property="Visibility" Value="Collapsed" TargetName="unmappedDirectory" />
                      </DataTrigger>
                    </DataTemplate.Triggers>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn IsReadOnly="True" Width="22">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Grid d:DataContext="{d:DesignInstance wax:DirectoryMapping}">
                      <Button Content="-" Command="{Binding ClearMappingCommand}"
                              Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Style="{StaticResource SquareButtonStyle}" ToolTip="{x:Static properties:Resources.RemoveTheCustomMapping}" />
                      <Button Content="+" Command="{Binding AddDirectoryCommand}"
                              Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Style="{StaticResource SquareButtonStyle}" ToolTip="{x:Static properties:Resources.CreateANewDirectoryNode}" />
                    </Grid>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
            </DataGrid.Columns>
          </DataGrid>
        </local:GroupBox>
        <GridSplitter Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="5" />
        <local:GroupBox Grid.Row="2" Ordinal="5" Header="{x:Static properties:Resources.FileMappings}" IsOk="{Binding AreAllFilesMapped}">
          <DataGrid x:Name="FileMappingsGrid" dgx:Tools.ApplyInitialSorting="True"
                    ItemsSource="{Binding FileMappings}"
                    Style="{StaticResource DefaultDataGridStyle}"
                    IsEnabled="{Binding AreAllDirectoriesMapped}">
            <DataGrid.Columns>
              <DataGridTextColumn Header="{x:Static properties:Resources.File}" Binding="{Binding UniqueName}" Width="200" IsReadOnly="True" />
              <DataGridTextColumn Header="{x:Static properties:Resources.Ext}" Binding="{Binding Extension}" Width="50" IsReadOnly="True" />
              <DataGridTextColumn Header="{x:Static properties:Resources.State}" Binding="{Binding MappingState}" Width="100" IsReadOnly="True"
                                  SortDirection="Ascending" />
              <DataGridTemplateColumn Header="{x:Static properties:Resources.WiXDefinition}" Width="*" SortMemberPath="MappedNode.Id"
                                      IsReadOnly="True">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate DataType="wax:FileMapping">
                    <Border VerticalAlignment="Center">
                      <Grid>
                        <TextBlock x:Name="singleFile" DataContext="{Binding MappedNode}">
                          <Run Text="{Binding Id, Mode=OneWay}" />
                          <Span Foreground="Gray">
                            (<Run Text="{Binding Name, Mode=OneWay}" />,
                            <Run Text="{Binding Source, Mode=OneWay}" />)
                          </Span>
                        </TextBlock>
                        <ComboBox x:Name="ambiguousFile" ItemsSource="{Binding UnmappedNodes}"
                                  Style="{StaticResource {x:Static styles:ResourceKeys.ComboBoxStyle}}"
                                  DisplayMemberPath="Node"
                                  SelectedValuePath="Node"
                                  SelectedValue="{Binding MappedNodeSetter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Visibility="Collapsed" />
                      </Grid>
                    </Border>
                    <DataTemplate.Triggers>
                      <DataTrigger Binding="{Binding MappedNode}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Hidden" TargetName="singleFile" />
                        <Setter Property="Visibility" Value="Visible" TargetName="ambiguousFile" />
                      </DataTrigger>
                      <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                          <Condition Binding="{Binding MappedNode}" Value="{x:Null}" />
                          <Condition Binding="{Binding UnmappedNodes.Count}" Value="1" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Visibility" Value="Visible" TargetName="singleFile" />
                        <Setter Property="DataContext" Value="{Binding Path=UnmappedNodes[0].Node}"
                                TargetName="singleFile" />
                        <Setter Property="Visibility" Value="Collapsed" TargetName="ambiguousFile" />
                      </MultiDataTrigger>
                      <DataTrigger Binding="{Binding UnmappedNodes.Count}" Value="0">
                        <Setter Property="Visibility" Value="Collapsed" TargetName="ambiguousFile" />
                      </DataTrigger>
                    </DataTemplate.Triggers>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn Width="22">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Grid d:DataContext="{d:DesignInstance wax:FileMapping}">
                      <Button Content="-" Command="{Binding ClearMappingCommand}"
                              CommandParameter="{Binding Path=SelectedItems, ElementName=FileMappingsGrid}"
                              Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Style="{StaticResource SquareButtonStyle}" ToolTip="{x:Static properties:Resources.RemoveCustomFileMapping}" />
                      <Button Content="+" Command="{Binding AddFileCommand}"
                              CommandParameter="{Binding Path=SelectedItems, ElementName=FileMappingsGrid}"
                              Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Style="{StaticResource SquareButtonStyle}" ToolTip="{x:Static properties:Resources.CreateANewFileNode}" />
                      <Button Content="?" Command="{Binding ResolveFileCommand}"
                              CommandParameter="{Binding Path=SelectedItems, ElementName=FileMappingsGrid}"
                              Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Style="{StaticResource SquareButtonStyle}" ToolTip="{x:Static properties:Resources.ConfirmUniqueFileMapping}" />
                    </Grid>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowStyle>
              <Style TargetType="DataGridRow">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Style.Triggers>
                  <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                  <DataTrigger Binding="{Binding MappingState}" Value="{x:Static wax:MappingState.Unmapped}">
                    <Setter Property="Background" Value="LightCoral" />
                  </DataTrigger>
                  <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                  <DataTrigger Binding="{Binding MappingState}" Value="{x:Static wax:MappingState.Ambiguous}">
                    <Setter Property="Background" Value="DarkOrange" />
                  </DataTrigger>
                  <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                  <DataTrigger Binding="{Binding MappingState}" Value="{x:Static wax:MappingState.Unique}">
                    <Setter Property="Background" Value="Yellow" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </DataGrid.RowStyle>
          </DataGrid>
        </local:GroupBox>
        <GridSplitter Grid.Row="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="5" />
        <Grid Grid.Row="4">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="2*" />
          </Grid.ColumnDefinitions>
          <GroupBox Grid.Column="0" Header="{x:Static properties:Resources.UnmappedFiles}"
                    Style="{StaticResource {x:Static styles:ResourceKeys.GroupBoxStyle}}">
            <DataGrid ItemsSource="{Binding UnmappedFileNodes}" Style="{StaticResource DefaultDataGridStyle}">
              <DataGrid.Columns>
                <DataGridTextColumn Header="{x:Static properties:Resources.Id}" Binding="{Binding Node.Id}" IsReadOnly="True" />
                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <DataGridTextColumn Header="{x:Static properties:Resources.Name}" Binding="{Binding Name}" IsReadOnly="True" />
                <DataGridTextColumn Header="{x:Static properties:Resources.Source}" Binding="{Binding Node.Source, Mode=OneWay}" Width="*" IsReadOnly="True" />
                <DataGridTemplateColumn Width="22">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <Grid d:DataContext="{d:DesignInstance wax:UnmappedFile}">
                        <Button Content="-" Command="{Binding DeleteCommand}" Style="{StaticResource SquareButtonStyle}"
                                ToolTip="{x:Static properties:Resources.RemoveUnmappedFile}" />
                      </Grid>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
              </DataGrid.Columns>
            </DataGrid>
          </GroupBox>
          <GridSplitter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5" />
          <GroupBox Grid.Column="2" Header="Features"
                    Style="{StaticResource {x:Static styles:ResourceKeys.GroupBoxStyle}}">
            <GroupBox.Resources>
              <Style TargetType="Span">
                <Style.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextDecorations" Value="Underline" />
                  </Trigger>
                </Style.Triggers>
              </Style>
              <DataTemplate DataType="{x:Type wax:FeatureMapping}">
                <DockPanel>
                  <TextBlock DockPanel.Dock="Top" Margin="2,2,0,0" Background="Transparent">
                    <Run Text="{Binding FeatureNode.Id, Mode=OneWay}" FontWeight="Bold" />
                    <Run Text="  " />
                    <Span>
                      <Span.ToolTip>
                        <DockPanel>
                          <DockPanel.Resources>
                            <CollectionViewSource x:Key="FilesSource" Source="{Binding InstalledFiles}">
                              <CollectionViewSource.SortDescriptions>
                                <componentModel:SortDescription PropertyName="DisplayName" />
                              </CollectionViewSource.SortDescriptions>
                            </CollectionViewSource>
                          </DockPanel.Resources>
                          <TextBlock DockPanel.Dock="Top" Text="Files installed by this feature:" FontWeight="Bold" TextDecorations="Underline" />
                          <Decorator Height="3" DockPanel.Dock="Top" />
                          <ItemsControl ItemsSource="{Binding Source={StaticResource FilesSource}}" DisplayMemberPath="DisplayName">
                            <ItemsControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <WrapPanel Orientation="Vertical" MaxHeight="800" />
                              </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                          </ItemsControl>
                        </DockPanel>
                      </Span.ToolTip>
                      <Run Text="Files:" />
                      <Run Text="{Binding InstalledFiles.Count, Mode=OneWay}" />
                    </Span>
                    <Run Text="  " />
                    <Span>
                      <Span.ToolTip>
                        <DockPanel>
                          <TextBlock DockPanel.Dock="Top" Text="Projects installed by this feature:" FontWeight="Bold" TextDecorations="Underline" />
                          <Decorator Height="3" DockPanel.Dock="Top" />
                          <ItemsControl ItemsSource="{Binding Projects}">
                            <ItemsControl.ItemTemplate>
                              <DataTemplate DataType="wax:Project">
                                <TextBlock>
                                  <Run Text="{Binding Name, Mode=OneWay}" FontWeight="Bold" Foreground="#202020" />
                                  (<Run Text="{Binding RelativeFolder, Mode=OneWay}" />)
                                </TextBlock>
                              </DataTemplate>
                            </ItemsControl.ItemTemplate>
                          </ItemsControl>
                        </DockPanel>
                      </Span.ToolTip>
                      <Run Text="Projects:" />
                      <Run Text="{Binding Projects.Count, Mode=OneWay}" />
                    </Span>
                    <Run Text="  " />
                    <Span>
                      <Span.ToolTip>
                        <DockPanel>
                          <TextBlock DockPanel.Dock="Top" Text="Project output not installed by this feature:" FontWeight="Bold" TextDecorations="Underline" />
                          <Decorator Height="3" DockPanel.Dock="Top" />
                          <ItemsControl ItemsSource="{Binding MissingProjectOutputs}" DisplayMemberPath="TargetName" />
                        </DockPanel>
                      </Span.ToolTip>
                      <Run Text="Missing:" />
                      <Run Text="{Binding MissingProjectOutputs.Count, Mode=OneWay}" />
                    </Span>
                  </TextBlock>
                  <ItemsControl ItemsSource="{Binding Children}" Margin="15,0,0,0" />
                </DockPanel>
              </DataTemplate>
            </GroupBox.Resources>
            <ItemsControl ItemsSource="{Binding FeatureMappings}" />
          </GroupBox>
        </Grid>
      </Grid>
    </Grid>
  </DockPanel>
  <UserControl.Style>
    <Style TargetType="UserControl">
      <Style.Triggers>
        <DataTrigger Binding="{Binding IsUpdating}" Value="True">
          <Setter Property="Cursor" Value="{x:Static Cursors.Wait}" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </UserControl.Style>
</UserControl>